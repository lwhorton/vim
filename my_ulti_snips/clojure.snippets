# logging
snippet ns "namespace" b
(ns $1
  (:require
    []
    )
  )

$0
endsnippet

snippet pp "pprint"
(clojure.pprint/pprint $0)
endsnippet

snippet nsr "namespace with require" b
(ns $1
  (:require
    []
    )
  (:require-macros
    [aft.logging.core :refer [log]]
    )
  )
endsnippet

snippet nst "namespace for tests" b
(ns $1
  (:require
    [clojure.test :as t :refer [deftest testing is]]
    )
  )

(deftest $2
  (testing $0))
endsnippet

snippet cl "logging"
(logging.core/log $0)
endsnippet

snippet rgen "require clojure spec generator dependencies"
[cljs.spec.alpha :as s]
[cljs.spec.gen.alpha :as gen]
[clojure.test :as t :refer [deftest testing is are]]
[clojure.test.check :as tc]
[clojure.test.check.clojure-test :refer-macros [defspec]]
[clojure.test.check.generators :as g]
[clojure.test.check.properties :as prop :include-macros true]
endsnippet

# aclaimant
snippet tis "transaction-in"
(aclaimant.services.core.db.customer-schema.fns/transaction-in-schema
  "svc"
  $0)
endsnippet
